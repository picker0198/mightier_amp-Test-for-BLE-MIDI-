name: Build and Sign Flutter APK
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'
          cache: 'gradle'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.x'
          channel: 'stable'
          cache: true

      - name: Get Flutter dependencies
        run: flutter pub get

      # Create key.properties
      - name: Create key.properties
        run: |
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" > android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=my-key-alias" >> android/key.properties
          echo "storeFile=../my-release-key.jks" >> android/key.properties

      # Decode and decrypt keystore
      - name: Decode and decrypt keystore
        run: |
          echo "${{ secrets.ENCODED_KEYSTORE }}" | base64 -d > my-release-key.jks.enc
          openssl aes-256-cbc -d -in my-release-key.jks.enc -out android/my-release-key.jks -k "${{ secrets.KEYSTORE_PASSWORD }}"
          rm my-release-key.jks.enc

      # Build APK
      - name: Build Release APK
        run: flutter build apk --release

      # Upload APK
      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: release-apk
          path: build/app/outputs/flutter-apk/app-release.apk
          retention-days: 7
